{"version":3,"sources":["components/pagination/pagination.styles.ts","components/pagination/pagination.component.tsx","components/data-table/data-table.styles.ts","components/data-table/data-table.components.tsx","pages/entries-list/entries-list.styles.ts","pages/entries-list/entries-list.component.tsx"],"names":["PaginationWrapper","styled","ul","p","theme","colors","dark","light","primary","secondary","Pagination","page","setPage","lastPage","className","classes","onClick","map","i","DataTableWrapper","table","mobile","DataTable","labels","keys","render","data","link","useState","history","useHistory","currentPage","useMemo","slice","label","item","push","key","data-label","Math","ceil","length","EntriesListWrapper","div","fonts","title","EntriesEmptyWrapper","paragraph","EntriesListComponent","notes","useData","id","Routes","LIST","note","excerpt","user","name","time","toTime"],"mappings":"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","file":"static/js/6.a222ff6b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const PaginationWrapper = styled.ul`\n    display: flex;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    li {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        width: 35px;\n        height: 35px;\n        font-size: 14px;\n        padding: 0;\n        margin: 24px 6px 0 6px;\n        &.pagination {\n            &__button {\n                cursor: pointer;\n                color: ${(p) => p.theme.colors.dark};\n                border: 1px solid ${(p) => p.theme.colors.light};\n                border-radius: 8px;\n                &__active {\n                    border: 1px solid ${(p) => p.theme.colors.primary};\n                    background-color: ${(p) => p.theme.colors.primary};\n                    color: white;\n                }\n            }\n            &__dots {\n                color: ${(p) => p.theme.colors.secondary};\n            }\n        }\n    }\n`;\n","import React, { Dispatch, FC } from 'react';\n\nimport { classes } from '../../helpers';\nimport { PaginationWrapper } from './pagination.styles';\ninterface PaginationProps {\n    page: number;\n    setPage: Dispatch<number>;\n    lastPage: number;\n}\nconst Pagination: FC<PaginationProps> = ({ page, setPage, lastPage }) => {\n    return (\n        <PaginationWrapper>\n            {page > 2 ? (\n                <li\n                    className={classes(\n                        'pagination__button',\n                        page === 0 && 'pagination__button__active'\n                    )}\n                    onClick={() => setPage(1)}\n                >\n                    1\n                </li>\n            ) : null}\n            {page > 3 ? <li className={'pagination__dots'}>...</li> : null}\n            {[-2, -1, 0, 1, 2].map((i) =>\n                page + i > lastPage || page + i < 0 ? null : (\n                    <li\n                        key={i}\n                        onClick={() => setPage(page + i)}\n                        className={classes(\n                            'pagination__button',\n                            page === page + i && 'pagination__button__active'\n                        )}\n                    >\n                        {page + i + 1}\n                    </li>\n                )\n            )}\n            {lastPage - page > 3 ? (\n                <li className={'pagination__dots'}>...</li>\n            ) : null}\n            {lastPage - page > 2 ? (\n                <li\n                    className={classes(\n                        'pagination__button',\n                        page === lastPage && 'pagination__button__active'\n                    )}\n                    onClick={() => setPage(lastPage)}\n                >\n                    {lastPage + 1}\n                </li>\n            ) : null}\n        </PaginationWrapper>\n    );\n};\nexport default Pagination;\n","import styled from 'styled-components';\n\nimport { mobile } from '../../styles/_functions.styles';\n\nexport const DataTableWrapper = styled.table`\n    width: 100%;\n    border-collapse: collapse;\n    border-radius: 8px 8px 0 0;\n    overflow: hidden;\n    box-shadow: 4px 10px 20px #e1e1e1, 0 0 10px #f1f1f1;\n\n    .data-table {\n        &__head {\n            background-color: ${(p) => p.theme.colors.primary};\n            color: white;\n        }\n        &__th,\n        &__td {\n            text-align: left;\n            padding: 14px;\n            cursor: pointer;\n        }\n        &__tr {\n            border-bottom: 1px solid ${(p) => p.theme.colors.light};\n            transition: color 0.3s ease;\n            will-change: color;\n            &:hover {\n                color: ${(p) => p.theme.colors.primary};\n            }\n        }\n    }\n    ${mobile`\n          display: block;\n          box-shadow: none;\n          .data-table {\n            &__head {\n                display: none;\n            }\n            &__body {\n                display: block;\n            }\n            &__tr {\n                display: block;\n                padding: 14px 0;\n            }\n            &__td {\n                display: block;\n                padding: 10px 0;\n                &:before {\n                     content: attr(data-label)\": \";\n                     font-weight: 700;\n                }\n            }\n          }\n          `}\n`;\n","import React, { useMemo, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport Pagination from '../pagination/pagination.component';\nimport { DataTableWrapper } from './data-table.styles';\n\ntype RenderType<G> = Partial<\n    { [Option in keyof G]: (item: G) => React.ReactNode }\n>;\ninterface DataTableProps<G extends object> {\n    labels: string[];\n    keys: Partial<keyof G>[];\n    render?: RenderType<G>;\n    data: G[];\n    link: (item: G) => string;\n}\nconst PER_PAGE = 10;\nfunction DataTable<G extends object>({\n    labels,\n    keys,\n    render,\n    data,\n    link,\n}: DataTableProps<G>) {\n    const [page, setPage] = useState(0);\n    const history = useHistory();\n    const currentPage = useMemo(\n        () => data.slice(page * PER_PAGE, (page + 1) * PER_PAGE),\n        [page]\n    );\n    return (\n        <>\n            <DataTableWrapper className={'data-table'}>\n                <thead className={'data-table__head'}>\n                    <tr>\n                        {labels.map((label) => (\n                            <th key={label} className={'data-table__th'}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody className={'data-table__body'}>\n                    {currentPage.map((item: G, i) => (\n                        <tr\n                            key={i}\n                            className={'data-table__tr'}\n                            onClick={() => history.push(link(item))}\n                        >\n                            {keys.map((key: keyof G, i: number) => (\n                                <td\n                                    key={i}\n                                    data-label={labels[i]}\n                                    className={'data-table__td'}\n                                >\n                                    {render && key in render\n                                        ? (\n                                              render[key] as (\n                                                  item: G\n                                              ) => React.ReactNode\n                                          )(item)\n                                        : item[key]}\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </DataTableWrapper>\n            <Pagination\n                page={page}\n                setPage={setPage}\n                lastPage={Math.ceil(data.length / PER_PAGE - 1)}\n            />\n        </>\n    );\n}\nexport default DataTable;\n","import styled from 'styled-components';\nexport const EntriesListWrapper = styled.div`\n    max-width: 920px;\n    margin: auto;\n    .list {\n        &__title {\n            ${(p) => p.theme.fonts.title};\n        }\n    }\n`;\nexport const EntriesEmptyWrapper = styled.div`\n    ${(p) => p.theme.fonts.paragraph}\n    color: ${(p) => p.theme.colors.secondary};\n`;\n","import React, { FC } from 'react';\n\nimport DataTable from '../../components/data-table/data-table.components';\nimport { Routes } from '../../enums/routes.enum';\nimport { excerpt, toTime } from '../../helpers';\nimport { useData } from '../../store/data.context';\nimport { IFilledTime } from '../../types/entry.type';\nimport { EntriesEmptyWrapper, EntriesListWrapper } from './entries-list.styles';\n\nconst EntriesListComponent: FC = () => {\n    const { notes } = useData();\n    return (\n        <EntriesListWrapper>\n            <h1 className={'list-title'}>Entries List</h1>\n            {notes.length ? (\n                <DataTable<IFilledTime>\n                    labels={['ID', 'User', 'Time', 'Note']}\n                    keys={['id', 'user', 'time', 'note']}\n                    data={notes}\n                    link={({ id }) => `${Routes.LIST}/${id}`}\n                    render={{\n                        note: ({ note }) => excerpt(note, 30),\n                        user: ({ user }) => user?.name,\n                        time: ({ time }) => toTime(+time),\n                    }}\n                />\n            ) : (\n                <EntriesEmptyWrapper>No data yet</EntriesEmptyWrapper>\n            )}\n        </EntriesListWrapper>\n    );\n};\n\nexport default EntriesListComponent;\n"],"sourceRoot":""}